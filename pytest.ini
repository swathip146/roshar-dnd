[pytest]
# Pytest configuration for DnD Roshar project
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Filter out the anyio module rewriting warning as it's cosmetic
# The warning occurs because anyio is imported before pytest can set up assertion rewriting
# This doesn't affect test functionality, just assertion introspection for anyio code
filterwarnings =
    ignore::pytest.PytestAssertRewriteWarning

# Additional common warnings to filter if needed
# filterwarnings =
#     ignore::DeprecationWarning
#     ignore::PendingDeprecationWarning

# Verbose output for debugging
addopts = -v --tb=short

# Coverage settings (if using pytest-cov)
# addopts = -v --tb=short --cov=. --cov-report=term-missing

# Parallel execution settings (if using pytest-xdist)
# addopts = -v --tb=short -n auto